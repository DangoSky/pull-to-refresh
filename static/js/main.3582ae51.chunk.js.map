{"version":3,"sources":["components/pull-to-refresh/images/loading.svg","components/pull-to-refresh/images/drop-down.svg","components/pull-to-refresh/images/complete.svg","components/pull-to-refresh/index.tsx","components/pull-to-refresh/demo/index.tsx","App.js","index.js"],"names":["module","exports","STATUS","init","pullUpLoad","loading","pullToRefresh","loosenRefresh","refreshing","refreshed","PullRefresh","divRef","React","createRef","state","headerStatus","footerStatus","pullHeight","renderHeader","props","pullToRefreshText","loosenRefreshText","refreshingText","refreshedText","pullRefresh","src","loadingSvg","alt","className","completeSvg","renderFooter","hasMore","noMoreDataText","pullUpLoadHint","loadingText","footerText","dropDownSvg","touchStart","e","canRefresh","ref","currentTarget","initialTouch","clientY","touches","scrollTop","touchMove","distancePullToRefresh","touchDistance","pullDistance","easing","setState","touchEnd","refreshFn","setTimeout","includes","scroll","loadFn","distancePullUpLoad","scrollHeight","clientHeight","this","initData","distance","availHeight","window","screen","Math","sin","PI","style","transform","undefined","onScroll","onTouchStart","onTouchMove","onTouchEnd","children","PureComponent","ARR","Array","from","map","item","index","Demo","fetchData","Promise","resolve","console","log","list","concat","handleMore","a","renderList","key","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3582ae51.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/loading.6430e2b5.svg\";","module.exports = __webpack_public_path__ + \"static/media/drop-down.798164bc.svg\";","module.exports = __webpack_public_path__ + \"static/media/complete.c47211e6.svg\";","import React, { PureComponent, ReactNode } from 'react';\nimport './style.less';\nimport dropDownSvg from './images/drop-down.svg';\nimport loadingSvg from './images/loading.svg';\nimport completeSvg from './images/complete.svg';\n\ninterface PullRefreshProps {\n  children: ReactNode,\n  className?: string,\n  initData: (fn: () => void) => void,     // 初始化数据的函数\n  loadFn?: (fn: () => void) => void,      // 上拉页面后加载更多的函数，\n  refreshFn?: (fn: () => void) => void,   // 下拉页面后刷新数据的函数，不传的话表示不开启下拉刷新功能\n  hasMore?: boolean,              // 是否还有更多数据\n  noMoreDataText?: string,        // 没有更多数据的文案\n  pullUpLoadHint?: string,        // 上拉加载更多的文案\n  loadingIcon?: ReactNode,        // 加载中显示的 icon\n  loadingText?: string,           // 正在加载的文案\n  distancePullUpLoad?: number,    // 距离底部多大距离就开始加载更多数据\n  pullToRefreshText?: string,     // 下拉刷新的文案\n  loosenRefreshText?: string,     // 松开刷新的文案\n  refreshingText?: string,        // 正在刷新的文案\n  refreshedText?: string,         // 刷新完成的文案\n  distancePullToRefresh?: number, // 下拉多大的距离后松开就开始刷新\n}\n\nconst STATUS = {\n  init: 'init',\n  pullUpLoad: 'pull-up-load',\n  loading: 'loading',\n  pullToRefresh: 'pull-to-refresh',\n  loosenRefresh: 'loosen-refresh',\n  refreshing: 'refreshing',\n  refreshed: 'refreshed'\n}\n\nclass PullRefresh extends PureComponent<PullRefreshProps> {\n  private divRef = React.createRef<HTMLDivElement>()\n  static initialTouch = {\n    clientY: 0,\n    scrollTop: 0\n  }\n\n  state = {\n    headerStatus: STATUS.init,\n    footerStatus: STATUS.init,\n    pullHeight: 0,\n  }\n\n  componentDidMount() {\n    // TODO: 优化\n    // 初始化数据后通过回调的形式来改变 footerStatus，避免文案会闪变\n    this.props.initData(() => {\n      this.setState({\n        footerStatus: STATUS.pullUpLoad\n      });\n    })\n  }\n\n  renderHeader = () => {\n    const { headerStatus } = this.state;\n    const {\n      pullToRefreshText = '下拉刷新',\n      loosenRefreshText = '松开刷新',\n      refreshingText = '正在刷新',\n      refreshedText = '刷新完成'\n    } = this.props;\n    const pullRefresh = (\n      <>\n        <i></i>\n        <span>{pullToRefreshText}</span>\n      </>\n    );\n    const loosenRefresh = (\n      <>\n        <i></i>\n        <span>{loosenRefreshText}</span>\n      </>\n    )\n    const refreshing = (\n      <>\n        <img src={loadingSvg} alt=\"\" className=\"icon-loading\" />\n        <span>{refreshingText}</span>\n      </>\n    );\n    const refreshed = (\n      <>\n        <img src={completeSvg} alt=\"\" />\n        <span>{refreshedText}</span>\n      </>\n    )\n    switch(headerStatus) {\n      case STATUS.pullToRefresh: return pullRefresh;\n      case STATUS.loosenRefresh: return loosenRefresh;\n      case STATUS.refreshing: return refreshing;\n      case STATUS.refreshed: return refreshed;\n      default: return null;\n    }\n  }\n\n  renderFooter = () => {\n    const {\n      hasMore,\n      noMoreDataText = '无更多数据',\n      pullUpLoadHint = '上拉页面加载更多数据',\n      loadingText = '正在加载'\n    } = this.props;\n    const { footerStatus } = this.state;\n    const footerText = footerStatus === STATUS.pullUpLoad ? (\n      <>\n        <img src={dropDownSvg} alt=\"\"/>\n        <span>{pullUpLoadHint}</span>\n      </>\n    ) : footerStatus === STATUS.loading ? (\n      <>\n        <img src={loadingSvg} alt=\"\" className=\"icon-loading\" />\n        <span>{loadingText}</span>\n      </>\n    ) : null;\n    return hasMore ? footerText : <p>{noMoreDataText}</p>;\n  }\n\n  touchStart = (e: any) => {\n    if (!this.canRefresh()) {\n      return;\n    }\n    const ref = e.currentTarget;\n    PullRefresh.initialTouch = {\n      clientY: e.touches[0].clientY,\n      scrollTop: ref.scrollTop\n    }\n  }\n\n  touchMove = (e: any) => {\n    if (!this.canRefresh()) {\n      return;\n    }\n    const { distancePullToRefresh = 60 } = this.props;\n    const touchDistance = e.touches[0].clientY - PullRefresh.initialTouch.clientY;\n    const { scrollTop } = e.currentTarget;\n    // 下拉页面 && 到了页面顶部\n    if (touchDistance > 0 && scrollTop <= 0) {\n      // 应该下拉的距离。因为 touchStart 的时候可能存在 scrollTop，所以需要减去初始的 scrollTop\n      let pullDistance = touchDistance - PullRefresh.initialTouch.scrollTop;\n      if (pullDistance < 0) {\n        pullDistance = 0;\n        PullRefresh.initialTouch.scrollTop = touchDistance;\n      }\n      const pullHeight = this.easing(pullDistance);\n      this.setState({\n        pullHeight,\n        headerStatus: pullHeight > distancePullToRefresh ? STATUS.loosenRefresh : STATUS.pullToRefresh,\n      })\n    }\n  }\n\n  touchEnd = () => {\n    if (!this.canRefresh()) {\n      return;\n    }\n    const { headerStatus } = this.state;\n    const { refreshFn } = this.props;\n    if (headerStatus === STATUS.loosenRefresh) {\n      this.setState({\n        headerStatus: STATUS.refreshing,\n        pullHeight: 0\n      })\n      if (refreshFn) {\n        refreshFn(() => {\n          this.setState({\n            headerStatus: STATUS.refreshed,\n          }, () => {\n            setTimeout(() => {\n              this.setState({\n                headerStatus: STATUS.init,\n              })\n            }, 500);\n          })\n        });\n        \n      }\n    } else {\n      this.setState({\n        headerStatus: STATUS.init,\n        pullHeight: 0\n      })\n    }\n  }\n\n  canRefresh = () => {\n    const { refreshFn } = this.props;\n    const { headerStatus } = this.state;\n    return refreshFn && !([STATUS.refreshing, STATUS.loading].includes(headerStatus));\n  }\n\n  easing(distance: number) {\n    const availHeight = window.screen.availHeight;\n    return (availHeight / 2.5) * Math.sin(distance / availHeight * (Math.PI / 2));\n  }\n\n  scroll = (e: any) => {\n    // TODO：可以不使用 ref 而使用 e.currentTarget？\n    // const ref = this.divRef.current;\n    const ref = e.currentTarget as HTMLDivElement;\n    const { hasMore, loadFn, distancePullUpLoad = 0 } = this.props;\n    const { footerStatus } = this.state;\n    if (\n      ref &&\n      hasMore &&\n      loadFn &&\n      footerStatus !== STATUS.loading &&  // 已经在 loading 状态就不再触发，避免在 loading 时还下拉页面导致多次触发\n      ref.scrollHeight - distancePullUpLoad <= ref.scrollTop + ref.clientHeight\n    ) {\n      this.setState({\n        footerStatus: STATUS.loading\n      });\n      loadFn(() => {\n        // 加载数据完成后改变 footer 状态\n        this.setState({\n          footerStatus: STATUS.pullUpLoad\n        })\n      });\n    }\n  }\n\n  render() {\n    const { pullHeight, headerStatus, footerStatus } = this.state;\n    const { hasMore, className = '' } = this.props;\n    const style = pullHeight ? {\n      transform: `translateY(${pullHeight}px)`\n    } : undefined;\n\n    return (\n      <div\n        className={`dangosky-pull-refresh-container status-${headerStatus} ${className}`}\n        ref={this.divRef}\n        onScroll={this.scroll}\n        onTouchStart={this.touchStart}\n        onTouchMove={this.touchMove}\n        onTouchEnd={this.touchEnd}\n      >\n        <div className=\"dangosky-header\">\n          {this.renderHeader()}\n        </div>\n        <div className=\"dangosky-body\" style={style}>\n          {this.props.children}\n        </div>\n        <div className={`dangosky-footer footer-status-${!hasMore ? 'no-more-data' : footerStatus}`}>\n          {this.renderFooter()}\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default PullRefresh;\n","import React, { PureComponent } from 'react';\nimport PullRefresh from '../index';\nimport './style.less';\n\nconst ARR = Array.from(Array(25)).map((item, index) => index + 1);\n\ninterface State {\n  list: number[]\n}\n\nexport default class Demo extends PureComponent<{}, State> {\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      list: []\n    }\n  }\n\n  // initData = (resolve) => {\n  //   setTimeout(() => {\n  //     console.log(this.state.list);\n  //     this.setState({\n  //       list: ARR\n  //     }, () => {\n  //       console.log(this.state.list);\n  //     })\n  //   }, 1000);\n  // }\n\n  fetchData = () => {\n    return new Promise(resolve => {\n      setTimeout(() => {\n        console.log(this.state.list);\n        this.setState({\n          list: this.state.list.concat(ARR)\n        }, () => {\n          console.log(this.state.list);\n        })\n        resolve();\n      }, 3000);\n    })\n  }\n\n  handleMore = async (resolve: () => void) => {\n    await this.fetchData();\n    resolve();\n  }\n\n  renderList = () => {\n    const { list } = this.state;\n    return list.map((item, index) => {\n      return (\n        <p key={index}>{ item }</p>\n      )\n    })\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <PullRefresh\n          hasMore\n          initData={this.handleMore}\n          loadFn={this.handleMore}\n          refreshFn={this.handleMore}\n        >\n          <div className=\"content\">\n            { this.renderList() }\n          </div>\n        </PullRefresh>\n      </div>\n    )\n  }\n}\n","import React from 'react';\nimport PullToRefreshDemo from './components/pull-to-refresh/demo';\n\nfunction App() {\n  return (\n     <div>\n      <PullToRefreshDemo />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}